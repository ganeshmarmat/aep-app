{"ast":null,"code":"import _classCallCheck from \"C:/Users/Admin/Desktop/Angular_Projects/ERPUI/latest/aep-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Admin/Desktop/Angular_Projects/ERPUI/latest/aep-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpHandler, HttpRequest } from '@angular/common/http';\nimport { CustomAuthService } from 'src/app/erp-services/auth/custom-auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/erp-services/auth/custom-auth.service\";\nvar TOKEN_HEADER_KEY = 'Authorization'; // for Spring Boot back-end\n//const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\n\nexport var AuthInterceptor = /*#__PURE__*/(function () {\n  var AuthInterceptor = /*#__PURE__*/function () {\n    function AuthInterceptor(token) {\n      _classCallCheck(this, AuthInterceptor);\n\n      this.token = token;\n    }\n\n    _createClass(AuthInterceptor, [{\n      key: \"intercept\",\n      value: function intercept(req, next) {\n        debugger;\n        var authReq = req;\n        var token = this.token.GetLocalTokenStorage();\n\n        if (token != null) {\n          // for Spring Boot back-end\n          authReq = req.clone({\n            headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)\n          }); // for Node.js Express back-end\n          // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n        }\n\n        return next.handle(authReq);\n      }\n    }]);\n\n    return AuthInterceptor;\n  }();\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.CustomAuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();\nexport var authInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n}];","map":null,"metadata":{},"sourceType":"module"}